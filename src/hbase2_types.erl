%%
%% Autogenerated by Thrift Compiler (0.9.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(hbase2_types).

-include("hbase2_types.hrl").

-export([struct_info/1, struct_info_ext/1]).

struct_info('tTimeRange') ->
  {struct, [{1, i64},
          {2, i64}]}
;

struct_info('tColumn') ->
  {struct, [{1, string},
          {2, string},
          {3, i64}]}
;

struct_info('tColumnValue') ->
  {struct, [{1, string},
          {2, string},
          {3, string},
          {4, i64},
          {5, string}]}
;

struct_info('tColumnIncrement') ->
  {struct, [{1, string},
          {2, string},
          {3, i64}]}
;

struct_info('tResult') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tColumnValue'}}}}]}
;

struct_info('tAuthorization') ->
  {struct, [{1, {list, string}}]}
;

struct_info('tCellVisibility') ->
  {struct, [{1, string}]}
;

struct_info('tGet') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tColumn'}}}},
          {3, i64},
          {4, {struct, {'hbase2_types', 'tTimeRange'}}},
          {5, i32},
          {6, string},
          {7, {map, string, string}},
          {8, {struct, {'hbase2_types', 'tAuthorization'}}}]}
;

struct_info('tPut') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tColumnValue'}}}},
          {3, i64},
          {5, {map, string, string}},
          {6, i32},
          {7, {struct, {'hbase2_types', 'tCellVisibility'}}}]}
;

struct_info('tDelete') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tColumn'}}}},
          {3, i64},
          {4, i32},
          {6, {map, string, string}},
          {7, i32}]}
;

struct_info('tIncrement') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tColumnIncrement'}}}},
          {4, {map, string, string}},
          {5, i32},
          {6, {struct, {'hbase2_types', 'tCellVisibility'}}}]}
;

struct_info('tAppend') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tColumnValue'}}}},
          {3, {map, string, string}},
          {4, i32},
          {5, {struct, {'hbase2_types', 'tCellVisibility'}}}]}
;

struct_info('tScan') ->
  {struct, [{1, string},
          {2, string},
          {3, {list, {struct, {'hbase2_types', 'tColumn'}}}},
          {4, i32},
          {5, i32},
          {6, {struct, {'hbase2_types', 'tTimeRange'}}},
          {7, string},
          {8, i32},
          {9, {map, string, string}},
          {10, {struct, {'hbase2_types', 'tAuthorization'}}},
          {11, bool}]}
;

struct_info('tMutation') ->
  {struct, [{1, {struct, {'hbase2_types', 'tPut'}}},
          {2, {struct, {'hbase2_types', 'tDelete'}}}]}
;

struct_info('tRowMutations') ->
  {struct, [{1, string},
          {2, {list, {struct, {'hbase2_types', 'tMutation'}}}}]}
;

struct_info('tIOError') ->
  {struct, [{1, string}]}
;

struct_info('tIllegalArgument') ->
  {struct, [{1, string}]}
;

struct_info('i am a dummy struct') -> undefined.

struct_info_ext('tTimeRange') ->
  {struct, [{1, required, i64, 'minStamp', undefined},
          {2, required, i64, 'maxStamp', undefined}]}
;

struct_info_ext('tColumn') ->
  {struct, [{1, required, string, 'family', undefined},
          {2, optional, string, 'qualifier', undefined},
          {3, optional, i64, 'timestamp', undefined}]}
;

struct_info_ext('tColumnValue') ->
  {struct, [{1, required, string, 'family', undefined},
          {2, required, string, 'qualifier', undefined},
          {3, required, string, 'value', undefined},
          {4, optional, i64, 'timestamp', undefined},
          {5, optional, string, 'tags', undefined}]}
;

struct_info_ext('tColumnIncrement') ->
  {struct, [{1, required, string, 'family', undefined},
          {2, required, string, 'qualifier', undefined},
          {3, optional, i64, 'amount', 1}]}
;

struct_info_ext('tResult') ->
  {struct, [{1, optional, string, 'row', undefined},
          {2, required, {list, {struct, {'hbase2_types', 'tColumnValue'}}}, 'columnValues', []}]}
;

struct_info_ext('tAuthorization') ->
  {struct, [{1, optional, {list, string}, 'labels', []}]}
;

struct_info_ext('tCellVisibility') ->
  {struct, [{1, optional, string, 'expression', undefined}]}
;

struct_info_ext('tGet') ->
  {struct, [{1, required, string, 'row', undefined},
          {2, optional, {list, {struct, {'hbase2_types', 'tColumn'}}}, 'columns', []},
          {3, optional, i64, 'timestamp', undefined},
          {4, optional, {struct, {'hbase2_types', 'tTimeRange'}}, 'timeRange', #tTimeRange{}},
          {5, optional, i32, 'maxVersions', undefined},
          {6, optional, string, 'filterString', undefined},
          {7, optional, {map, string, string}, 'attributes', dict:new()},
          {8, optional, {struct, {'hbase2_types', 'tAuthorization'}}, 'authorizations', #tAuthorization{}}]}
;

struct_info_ext('tPut') ->
  {struct, [{1, required, string, 'row', undefined},
          {2, required, {list, {struct, {'hbase2_types', 'tColumnValue'}}}, 'columnValues', []},
          {3, optional, i64, 'timestamp', undefined},
          {5, optional, {map, string, string}, 'attributes', dict:new()},
          {6, optional, i32, 'durability', undefined},
          {7, optional, {struct, {'hbase2_types', 'tCellVisibility'}}, 'cellVisibility', #tCellVisibility{}}]}
;

struct_info_ext('tDelete') ->
  {struct, [{1, required, string, 'row', undefined},
          {2, optional, {list, {struct, {'hbase2_types', 'tColumn'}}}, 'columns', []},
          {3, optional, i64, 'timestamp', undefined},
          {4, optional, i32, 'deleteType',   1},
          {6, optional, {map, string, string}, 'attributes', dict:new()},
          {7, optional, i32, 'durability', undefined}]}
;

struct_info_ext('tIncrement') ->
  {struct, [{1, required, string, 'row', undefined},
          {2, required, {list, {struct, {'hbase2_types', 'tColumnIncrement'}}}, 'columns', []},
          {4, optional, {map, string, string}, 'attributes', dict:new()},
          {5, optional, i32, 'durability', undefined},
          {6, optional, {struct, {'hbase2_types', 'tCellVisibility'}}, 'cellVisibility', #tCellVisibility{}}]}
;

struct_info_ext('tAppend') ->
  {struct, [{1, required, string, 'row', undefined},
          {2, required, {list, {struct, {'hbase2_types', 'tColumnValue'}}}, 'columns', []},
          {3, optional, {map, string, string}, 'attributes', dict:new()},
          {4, optional, i32, 'durability', undefined},
          {5, optional, {struct, {'hbase2_types', 'tCellVisibility'}}, 'cellVisibility', #tCellVisibility{}}]}
;

struct_info_ext('tScan') ->
  {struct, [{1, optional, string, 'startRow', undefined},
          {2, optional, string, 'stopRow', undefined},
          {3, optional, {list, {struct, {'hbase2_types', 'tColumn'}}}, 'columns', []},
          {4, optional, i32, 'caching', undefined},
          {5, optional, i32, 'maxVersions', 1},
          {6, optional, {struct, {'hbase2_types', 'tTimeRange'}}, 'timeRange', #tTimeRange{}},
          {7, optional, string, 'filterString', undefined},
          {8, optional, i32, 'batchSize', undefined},
          {9, optional, {map, string, string}, 'attributes', dict:new()},
          {10, optional, {struct, {'hbase2_types', 'tAuthorization'}}, 'authorizations', #tAuthorization{}},
          {11, optional, bool, 'reversed', undefined}]}
;

struct_info_ext('tMutation') ->
  {struct, [{1, optional, {struct, {'hbase2_types', 'tPut'}}, 'put', #tPut{}},
          {2, optional, {struct, {'hbase2_types', 'tDelete'}}, 'deleteSingle', #tDelete{}}]}
;

struct_info_ext('tRowMutations') ->
  {struct, [{1, required, string, 'row', undefined},
          {2, required, {list, {struct, {'hbase2_types', 'tMutation'}}}, 'mutations', []}]}
;

struct_info_ext('tIOError') ->
  {struct, [{1, optional, string, 'message', undefined}]}
;

struct_info_ext('tIllegalArgument') ->
  {struct, [{1, optional, string, 'message', undefined}]}
;

struct_info_ext('i am a dummy struct') -> undefined.

